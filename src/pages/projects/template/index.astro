---
import SceneLayout from 'src/layouts/SceneLayout.astro';
// import * as readme from './readme.md';

const title = ''; //readme?.frontmatter?.title ?? '';
---

<SceneLayout title={title} />

<script>
  import * as THREE from 'three';
  import BaseScene, { isReady } from '@lib/sceneController';
  import vertexShader from './shaders/vertex.vs.glsl?raw';
  import fragmentShader from './shaders/fragment.fs.glsl?raw';
  import type { BaseSceneState } from '@lib/types';

  /* -------------------------------- */
  /*          Setup & Globals         */
  /* -------------------------------- */
  const canvas = document.getElementById('app-view')! as HTMLCanvasElement;
  const { state, registerRenderCallback } = BaseScene({ canvas });
  const { scene, camera, uniforms } = state;

  /* -------------------------------- */
  /*                Scene             */
  /* -------------------------------- */
  function Scene() {
    let mesh: THREE.Mesh,
      material: THREE.ShaderMaterial,
      geometry: THREE.BufferGeometry;

    function animationLoop(state: BaseSceneState) {
      mesh.position.y = Math.sin(state.time * 2) / 2;
    }

    function init() {
      geometry = new THREE.SphereGeometry(0.25, 30, 30);
      material = new THREE.ShaderMaterial({
        uniforms,
        vertexShader,
        fragmentShader,
      });
      mesh = new THREE.Mesh(geometry, material);
      scene.add(mesh);

      registerRenderCallback(animationLoop);
      isReady.set(true);
    }

    init();
  }

  Scene();
</script>
