---
import StealthLayout from '../../../layouts/StealthLayout.astro';
---

<StealthLayout title="Template">
  <main>
    <canvas id="app_view"></canvas>
    <div id="gui_container"></div>
  </main>
</StealthLayout>

<script>
  import * as THREE from 'three';
  import BaseScene, { BaseSceneState } from '@lib/sceneController';
  import basicVertexShader from './shaders/vertex.vs.glsl?raw';
  import basicFragmentShader from './shaders/fragment.fs.glsl?raw';

  const canvas = document.getElementById('app_view')! as HTMLCanvasElement;
  const { state, registerRenderCallback, unregisterRenderCallback } = BaseScene(
    { canvas },
  );
  const { scene, renderer, camera, uniforms } = state;

  /* ---------- Geometry ---------- */
  const geometry = new THREE.SphereGeometry(0.25, 30, 30);
  const material = new THREE.ShaderMaterial({
    uniforms,
    vertexShader: basicVertexShader,
    fragmentShader: basicFragmentShader,
    wireframe: true,
  });

  const mesh = new THREE.Mesh(geometry, material);
  scene.add(mesh);

  function animationLoop(state: BaseSceneState) {
    // mesh.position.y = Math.sin(state.time * 2) / 2;
  }

  registerRenderCallback(animationLoop);
</script>

<style is:global>
  html {
    height: 100vh;
    overflow: hidden;
  }
</style>

<style>
  body {
    width: 100%;
    height: 100vh;
    background: var(--color-background);
    overflow: hidden;
    overscroll-behavior: none;
    margin: 0;
    padding: 0;
  }

  #app_view {
    display: block;
    width: 100%;
    height: 100%;
  }

  #gui_container {
    position: absolute;
    bottom: 2rem;
    left: 50%;
    transform: translateX(-50%);
  }

  #gui {
    position: absolute;
    top: 0;
    left: 0;
  }
</style>
