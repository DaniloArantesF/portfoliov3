---
import CardList from '../components/CardList';
import Layout from '../layouts/Layout.astro';

export interface ProjectProps {
  description: string;
  featured: boolean;
  github?: string;
  lastUpdated: string;
  live?: string;
  picture: string;
  sandbox?: string;
  subtitle: string;
  tags: string[];
  title: string;
  visibility?: 'visible' | 'hidden' | 'private';
}

export async function getProjects(all = false) {
  // Hidden projects are only visible in production.
  // Show all if dev
  const visible = (status: string) =>
    (all || import.meta.env.DEV || status === 'visible') && status !== 'hidden';

  // Offsite projects are included from src/projects
  const projects = (
    await Astro.glob<ProjectProps>('/src/projects/*.md')
  ).filter(({ frontmatter }) => visible(frontmatter.visibility ?? ''));

  // Demos are included here
  // Note: If a demo does not contain a readme it will not be listed
  const demos = (
    await Astro.glob<ProjectProps>('/src/pages/projects/**/*.md')
  ).filter(({ frontmatter }) => visible(frontmatter.visibility ?? ''));

  return { projects, demos };
}

const { projects, demos } = await getProjects(true);

// Map project data
const cards = [
  ...demos.map((project) => {
    const projectLink = project.url!.substring(
      0,
      project.url!.lastIndexOf('/'),
    );
    return {
      href: projectLink,
      ...project.frontmatter,
    };
  }),
  ...projects.map((project) => {
    const slug = project.file.substring(
      project.file.lastIndexOf('/') + 1,
      project.file.length - 3,
    );

    const projectLink = project.frontmatter.live
      ? project.frontmatter.live
      : project.frontmatter.sandbox
      ? project.frontmatter.sandbox
      : project.frontmatter.github;
    return {
      href: projectLink ?? `/projects/${slug}`,
      ...project.frontmatter,
    };
  }),
];
---

<Layout title="Portfolio">
  <main>
    <CardList name="Projects" client:only="react" cards={cards} />
  </main>
</Layout>

<style>
  main {
    padding: 0rem var(--main-margin-x);
    max-width: var(--content-max-width);
    width: 100%;
    margin: 0 auto;
  }
</style>
