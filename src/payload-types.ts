/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    media: Media;
    pages: Page;
    projects: Project;
    'reusable-content': ReusableContent;
    tags: Tag;
    users: User;
    forms: Form;
    'form-submissions': FormSubmission;
    redirects: Redirect;
  };
  globals: {
    'brand-info': BrandInfo;
    menu: Menu;
    footer: Footer;
  };
}
export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string;
  filename?: string;
  mimeType?: string;
  filesize?: number;
  width?: number;
  height?: number;
}
export interface Page {
  id: string;
  title: string;
  fullTitle?: string;
  layout?: (
    | {
        ctaFields: {
          richText: {
            [k: string]: unknown;
          }[];
          links?: {
            link: {
              type?: 'reference' | 'custom' | 'section';
              newTab?: boolean;
              reference:
                | {
                    value: string | Page;
                    relationTo: 'pages';
                  }
                | {
                    value: string | Project;
                    relationTo: 'projects';
                  };
              url: string;
              section: string;
              label: string;
            };
            id?: string;
          }[];
        };
        sectionId?: string;
        backgroundColor?:
          | 'background'
          | 'background-1'
          | 'background-2'
          | 'transparent';
        id?: string;
        blockName?: string;
        blockType: 'cta';
      }
    | {
        title?: string;
        cardGridFields?: {
          richText?: {
            [k: string]: unknown;
          }[];
          links?: {
            link: {
              type?: 'reference' | 'custom' | 'section';
              newTab?: boolean;
              reference:
                | {
                    value: string | Page;
                    relationTo: 'pages';
                  }
                | {
                    value: string | Project;
                    relationTo: 'projects';
                  };
              url: string;
              section: string;
              label: string;
            };
            id?: string;
          }[];
          cards?: {
            title: string;
            image?: string | Media;
            description?: string;
            enableLink?: boolean;
            link?: {
              type?: 'reference' | 'custom' | 'section';
              newTab?: boolean;
              reference:
                | {
                    value: string | Page;
                    relationTo: 'pages';
                  }
                | {
                    value: string | Project;
                    relationTo: 'projects';
                  };
              url: string;
              section: string;
            };
            id?: string;
          }[];
        };
        sectionId?: string;
        backgroundColor?:
          | 'background'
          | 'background-1'
          | 'background-2'
          | 'transparent';
        id?: string;
        blockName?: string;
        blockType: 'cardGrid';
      }
    | {
        headline?: string;
        content?: {
          [k: string]: unknown;
        }[];
        sectionId?: string;
        backgroundColor?:
          | 'background'
          | 'background-1'
          | 'background-2'
          | 'transparent';
        id?: string;
        blockName?: string;
        blockType: 'content';
      }
    | {
        formFields: {
          container?: boolean;
          richText: {
            [k: string]: unknown;
          }[];
          form: string | Form;
        };
        sectionId?: string;
        backgroundColor?:
          | 'background'
          | 'background-1'
          | 'background-2'
          | 'transparent';
        id?: string;
        blockName?: string;
        blockType: 'form';
      }
    | {
        headline?: string;
        info?: {
          [k: string]: unknown;
        }[];
        buttons?: {
          link: {
            type?: 'reference' | 'custom' | 'section';
            newTab?: boolean;
            reference:
              | {
                  value: string | Page;
                  relationTo: 'pages';
                }
              | {
                  value: string | Project;
                  relationTo: 'projects';
                };
            url: string;
            section: string;
            label: string;
          };
          id?: string;
        }[];
        navLinkSectionId?: string;
        navLinkLabel?: string;
        sectionId?: string;
        id?: string;
        blockName?: string;
        blockType: 'hero';
      }
    | {
        mediaContentFields: {
          alignment?: 'contentMedia' | 'mediaContent';
          container?: boolean;
          richText: {
            [k: string]: unknown;
          }[];
          enableLink?: boolean;
          link?: {
            type?: 'reference' | 'custom' | 'section';
            newTab?: boolean;
            reference:
              | {
                  value: string | Page;
                  relationTo: 'pages';
                }
              | {
                  value: string | Project;
                  relationTo: 'projects';
                };
            url: string;
            section: string;
            label: string;
          };
          media: string | Media;
        };
        sectionId?: string;
        id?: string;
        blockName?: string;
        blockType: 'mediaContent';
      }
    | {
        heading?: string;
        projects: string[] | Project[];
        sectionId?: string;
        id?: string;
        blockName?: string;
        blockType: 'projectList';
      }
    | {
        heading?: string;
        pictures: string[] | Media[];
        sectionId?: string;
        id?: string;
        blockName?: string;
        blockType: 'imageGallery';
      }
    | {
        reusableContentBlockFields: {
          reusableContent: string | ReusableContent;
        };
        sectionId?: string;
        id?: string;
        blockName?: string;
        blockType: 'reusableContentBlock';
      }
  )[];
  nav?: {
    link: {
      type?: 'reference' | 'custom' | 'section';
      newTab?: boolean;
      reference:
        | {
            value: string | Page;
            relationTo: 'pages';
          }
        | {
            value: string | Project;
            relationTo: 'projects';
          };
      url: string;
      section: string;
      label: string;
      appearance?: 'default' | 'primary' | 'secondary';
    };
    id?: string;
  }[];
  slug?: string;
  meta?: {
    title?: string;
    description?: string;
    image?: string | Media;
  };
  parent?: string | Page;
  breadcrumbs?: {
    doc?: string | Page;
    url?: string;
    label?: string;
    id?: string;
  }[];
  updatedAt: string;
  createdAt: string;
  _status?: 'draft' | 'published';
}
export interface Project {
  id: string;
  title: string;
  image: string | Media;
  domain?: string;
  type?: 'project' | 'scene' | 'game';
  description?: {
    [k: string]: unknown;
  }[];
  credits: {
    [k: string]: unknown;
  }[];
  slug?: string;
  publishedOn?: string;
  visible?: boolean;
  featured?: boolean;
  links?: {
    source:
      | 'custom'
      | 'github'
      | 'codesandbox'
      | 'codepen'
      | 'instagram'
      | 'behance';
    url: string;
    id?: string;
  }[];
  tags?: string[] | Tag[];
  meta?: {
    title?: string;
    description?: string;
    image?: string | Media;
  };
  updatedAt: string;
  createdAt: string;
  _status?: 'draft' | 'published';
}
export interface Tag {
  id: string;
  label?: string;
  value?: string;
  url?: string;
  updatedAt: string;
  createdAt: string;
}
export interface Form {
  id: string;
  title: string;
  fields?: (
    | {
        name: string;
        label?: string;
        width?: number;
        defaultValue?: string;
        required?: boolean;
        id?: string;
        blockName?: string;
        blockType: 'text';
      }
    | {
        name: string;
        label?: string;
        width?: number;
        defaultValue?: string;
        required?: boolean;
        id?: string;
        blockName?: string;
        blockType: 'textarea';
      }
    | {
        name: string;
        label?: string;
        width?: number;
        defaultValue?: string;
        options?: {
          label: string;
          value: string;
          id?: string;
        }[];
        required?: boolean;
        id?: string;
        blockName?: string;
        blockType: 'select';
      }
    | {
        name: string;
        label?: string;
        width?: number;
        required?: boolean;
        id?: string;
        blockName?: string;
        blockType: 'email';
      }
    | {
        name: string;
        label?: string;
        width?: number;
        required?: boolean;
        id?: string;
        blockName?: string;
        blockType: 'state';
      }
    | {
        name: string;
        label?: string;
        width?: number;
        required?: boolean;
        id?: string;
        blockName?: string;
        blockType: 'country';
      }
    | {
        name: string;
        label?: string;
        width?: number;
        defaultValue?: number;
        required?: boolean;
        id?: string;
        blockName?: string;
        blockType: 'number';
      }
    | {
        name: string;
        label?: string;
        width?: number;
        required?: boolean;
        defaultValue?: boolean;
        id?: string;
        blockName?: string;
        blockType: 'checkbox';
      }
    | {
        message?: {
          [k: string]: unknown;
        }[];
        id?: string;
        blockName?: string;
        blockType: 'message';
      }
  )[];
  submitButtonLabel?: string;
  confirmationType?: 'message' | 'redirect';
  confirmationMessage: {
    [k: string]: unknown;
  }[];
  redirect?: {
    url: string;
  };
  emails?: {
    emailTo?: string;
    cc?: string;
    bcc?: string;
    replyTo?: string;
    emailFrom?: string;
    subject: string;
    message?: {
      [k: string]: unknown;
    }[];
    id?: string;
  }[];
  updatedAt: string;
  createdAt: string;
}
export interface ReusableContent {
  id: string;
  title: string;
  layout: (
    | {
        bannerFields: {
          type?: 'default' | 'success' | 'warning' | 'error';
          addCheckmark?: boolean;
          content: {
            [k: string]: unknown;
          }[];
        };
        id?: string;
        blockName?: string;
        blockType: 'banner';
      }
    | {
        blogContentFields: {
          richText: {
            [k: string]: unknown;
          }[];
        };
        id?: string;
        blockName?: string;
        blockType: 'blogContent';
      }
    | {
        blogMarkdownFields: {
          markdown: string;
        };
        id?: string;
        blockName?: string;
        blockType: 'blogMarkdown';
      }
    | {
        ctaFields: {
          richText: {
            [k: string]: unknown;
          }[];
          links?: {
            link: {
              type?: 'reference' | 'custom' | 'section';
              newTab?: boolean;
              reference:
                | {
                    value: string | Page;
                    relationTo: 'pages';
                  }
                | {
                    value: string | Project;
                    relationTo: 'projects';
                  };
              url: string;
              section: string;
              label: string;
            };
            id?: string;
          }[];
        };
        sectionId?: string;
        backgroundColor?:
          | 'background'
          | 'background-1'
          | 'background-2'
          | 'transparent';
        id?: string;
        blockName?: string;
        blockType: 'cta';
      }
    | {
        title?: string;
        cardGridFields?: {
          richText?: {
            [k: string]: unknown;
          }[];
          links?: {
            link: {
              type?: 'reference' | 'custom' | 'section';
              newTab?: boolean;
              reference:
                | {
                    value: string | Page;
                    relationTo: 'pages';
                  }
                | {
                    value: string | Project;
                    relationTo: 'projects';
                  };
              url: string;
              section: string;
              label: string;
            };
            id?: string;
          }[];
          cards?: {
            title: string;
            image?: string | Media;
            description?: string;
            enableLink?: boolean;
            link?: {
              type?: 'reference' | 'custom' | 'section';
              newTab?: boolean;
              reference:
                | {
                    value: string | Page;
                    relationTo: 'pages';
                  }
                | {
                    value: string | Project;
                    relationTo: 'projects';
                  };
              url: string;
              section: string;
            };
            id?: string;
          }[];
        };
        sectionId?: string;
        backgroundColor?:
          | 'background'
          | 'background-1'
          | 'background-2'
          | 'transparent';
        id?: string;
        blockName?: string;
        blockType: 'cardGrid';
      }
    | {
        headline?: string;
        content?: {
          [k: string]: unknown;
        }[];
        sectionId?: string;
        backgroundColor?:
          | 'background'
          | 'background-1'
          | 'background-2'
          | 'transparent';
        id?: string;
        blockName?: string;
        blockType: 'content';
      }
    | {
        formFields: {
          container?: boolean;
          richText: {
            [k: string]: unknown;
          }[];
          form: string | Form;
        };
        sectionId?: string;
        backgroundColor?:
          | 'background'
          | 'background-1'
          | 'background-2'
          | 'transparent';
        id?: string;
        blockName?: string;
        blockType: 'form';
      }
    | {
        mediaContentFields: {
          alignment?: 'contentMedia' | 'mediaContent';
          container?: boolean;
          richText: {
            [k: string]: unknown;
          }[];
          enableLink?: boolean;
          link?: {
            type?: 'reference' | 'custom' | 'section';
            newTab?: boolean;
            reference:
              | {
                  value: string | Page;
                  relationTo: 'pages';
                }
              | {
                  value: string | Project;
                  relationTo: 'projects';
                };
            url: string;
            section: string;
            label: string;
          };
          media: string | Media;
        };
        sectionId?: string;
        id?: string;
        blockName?: string;
        blockType: 'mediaContent';
      }
  )[];
  updatedAt: string;
  createdAt: string;
}
export interface User {
  id: string;
  firstName?: string;
  lastName?: string;
  roles: ('admin' | 'public')[];
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string;
  resetPasswordExpiration?: string;
  salt?: string;
  hash?: string;
  loginAttempts?: number;
  lockUntil?: string;
  password?: string;
}
export interface FormSubmission {
  id: string;
  form: string | Form;
  submissionData?: {
    field: string;
    value: string;
    id?: string;
  }[];
  updatedAt: string;
  createdAt: string;
}
export interface Redirect {
  id: string;
  from: string;
  to: {
    type?: 'reference' | 'custom';
    reference:
      | {
          value: string | Page;
          relationTo: 'pages';
        }
      | {
          value: string | Project;
          relationTo: 'projects';
        };
    url: string;
  };
  updatedAt: string;
  createdAt: string;
}
export interface BrandInfo {
  id: string;
  logo: string | Media;
  socials?: {
    platform: 'facebook' | 'instagram' | 'behance';
    link: string;
    id?: string;
  }[];
  copyright?: string;
  updatedAt?: string;
  createdAt?: string;
}
export interface Menu {
  id: string;
  nav?: {
    link: {
      type?: 'reference' | 'custom' | 'section';
      newTab?: boolean;
      reference:
        | {
            value: string | Page;
            relationTo: 'pages';
          }
        | {
            value: string | Project;
            relationTo: 'projects';
          };
      url: string;
      section: string;
      label: string;
      appearance?: 'default' | 'primary' | 'secondary';
    };
    id?: string;
  }[];
  updatedAt?: string;
  createdAt?: string;
}
export interface Footer {
  id: string;
  logo?: string | Media;
  columns?: {
    heading?: string;
    content?: {
      [k: string]: unknown;
    }[];
    navItems?: {
      link: {
        type?: 'reference' | 'custom' | 'section';
        newTab?: boolean;
        reference:
          | {
              value: string | Page;
              relationTo: 'pages';
            }
          | {
              value: string | Project;
              relationTo: 'projects';
            };
        url: string;
        section: string;
        label: string;
        appearance?: 'default' | 'primary' | 'secondary';
      };
      id?: string;
    }[];
    id?: string;
  }[];
  updatedAt?: string;
  createdAt?: string;
}
