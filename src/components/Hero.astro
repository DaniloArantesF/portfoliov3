---
import button from '../styles/button.module.css';
---

<div id="hero">
  <div class="hero-body">
    <h2><span>Hello</span><span>There</span></h2>
    <p>
      My name is Danilo. I am a software engineer focused on front-end
      development. I graduated from <b>Purdue University</b> with a degree in
      Computer Science and have been working with web technologies since 2019.
      My stack is always evolving, but most of my experience is using
      <b>Vanilla Javascript or React.js</b>. I am also familiar with <b
        >Node.js and Python</b
      > when dabbling in the backend.
    </p>
    <div class="buttons">
      <a
        aria-label="Contact"
        role="navigation"
        class={`${button.button}`}
        href={'/contact'}
      >
        Contact Me</a
      >
    </div>
  </div>
  <div id="bg">
    <span class="left-gradient"></span>
    <span class="right-gradient"></span>
    <span class="background-gradient"></span>
    <div class="background-container">
      <div></div>
      <div>
        <div class="background-lines">
          <div></div>
        </div>
      </div>
    </div>
  </div>
</div>

<style lang="scss">
  #hero {
    --hero-padding-bottom: 2rem;
    display: flex;
    align-items: center;
    flex-direction: column;
    min-height: calc(100vh - var(--header-height) - var(--main-margin-y));
    padding: 0.5rem 0rem var(--hero-padding-bottom);
    overflow: hidden;
  }

  #hero:after {
    content: '';
    display: inline-block;
    width: 100vw;
    height: 150px;
    bottom: calc(-1 * var(--main-margin-y) - var(--hero-padding-bottom));
    position: absolute;
    background: linear-gradient(
      180deg,
      transparent,
      var(--color-background) 70%
    );
    z-index: 150;
  }

  .hero-body {
    max-width: min(calc(100% - 2rem), 1200px);
    margin: 0rem 1rem;
    background: var(--color-surface-2);
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
    padding: 2rem 0.5rem 2rem;
    border-radius: var(--border-radius);
    box-shadow: var(--box-shadow);
    position: relative;
    z-index: 155;
  }

  h2 {
    position: relative;
    display: flex;
    justify-content: center;
    gap: 0.5rem;
    overflow: hidden;
    font-size: clamp(32px, 56px, 64px);
    text-align: center;
    margin: 0 auto;
    pointer-events: none;
    user-select: none;

    & span:first-child {
      background: linear-gradient(45deg, #4143e1 40%, #42d6ff);
      position: relative;
      -webkit-background-clip: text;
      background-clip: text;
      color: transparent;
      opacity: 0;
      animation: fade-down 500ms cubic-bezier(0.17, 0.67, 0.66, 0.97) forwards;
    }

    & span:last-child {
      background: linear-gradient(-45deg, #4143e1 40%, #42d6ff);
      position: relative;
      -webkit-background-clip: text;
      background-clip: text;
      color: transparent;
      opacity: 0;
      animation: fade-left 500ms cubic-bezier(0.17, 0.67, 0.66, 0.97) forwards;
      animation-delay: 100ms;
    }
  }

  @keyframes fade-down {
    0% {
      transform: translateY(-100%);
      opacity: 0;
    }
    50% {
      // opacity: 0;
    }
    100% {
      transform: translateY(0%);
      opacity: 1;
    }
  }
  @keyframes fade-left {
    0% {
      transform: translateX(100%);
      opacity: 0;
    }
    50% {
      // opacity: 0;
    }
    100% {
      transform: translatex(0%);
      opacity: 1;
    }
  }

  p {
    max-width: 600px;
    padding: 0 2rem;
  }

  .buttons {
    margin-top: 2rem;
    width: 100%;
    display: grid;
    grid-template-columns: 1fr;
    justify-content: center;
    justify-items: center;
    gap: 1rem;
  }

  @media only screen and (min-height: 1000px) {
    #hero {
      --hero-padding-bottom: 3rem;
      // padding: 5rem 0rem var(--hero-padding-bottom);
    }
  }
  @media only screen and (min-width: 600px) {
    .buttons {
      grid-template-columns: repeat(auto-fit, minmax(auto, 200px));
    }
  }
</style>

<style>
  /* Background Animation */
  @property --intersection {
    syntax: '<percentage>';
    initial-value: 50%;
    inherits: false;
  }

  @property --gap {
    syntax: '<percentage | number>';
    initial-value: max(10%, 30px);
    inherits: true;
  }

  @property --left-lower-opacity {
    syntax: '<number>';
    initial-value: 0.5;
    inherits: false;
  }

  @property --right-lower-opacity {
    syntax: '<number>';
    initial-value: 0.5;
    inherits: false;
  }

  :root {
    --color-0: #4143e1;
    --color-1: #42d6ff;
    --width: 200vw;
    --margin: -50%;
    --gap: 100px;
    --intersection: 50%;
    --left-lower-opacity: 0.5;
    --right-lower-opacity: 0.5;
  }

  @media only screen and (min-width: 800px) {
    :root {
      --width: 400vw;
      --margin: -150%;
    }
  }

  #bg {
    position: absolute;
    width: 100%;
    height: calc(100vh - var(--header-height));
    z-index: -1;
    overflow: hidden;
  }

  .background-container {
    position: absolute;
    z-index: -6;
    overflow: hidden;
    inset: 0;
    transition: perspective 3s ease 0s;
    perspective: 300px;
  }

  /* Background gradient */
  .background-container > :nth-child(1) {
    z-index: 99;
    position: absolute;
    inset: 0;
    background: linear-gradient(
      0deg,
      rgba(0, 0, 0, 0) 0px,
      var(--color-background) 50%
    );
  }

  .background-container > :nth-child(2) {
    position: absolute;
    inset: 0px;
    transform: rotateX(55deg);
  }

  .background-lines {
    position: absolute;
    width: var(--width);
    display: flex;
    align-items: center;
    justify-content: center;
    margin-left: var(--margin);
    transform: translateY(0);
    overflow: hidden;

    inset: -100% 0;
    background-position-y: 100%;

    -webkit-mask-image: linear-gradient(180deg, #000 2px, transparent 0),
      linear-gradient(90deg, #000 2px, transparent 0);
    mask-image: linear-gradient(90deg, #000 2px, transparent 0),
      linear-gradient(180deg, #000 2px, transparent 0);

    -webkit-mask-repeat: repeat;
    mask-repeat: repeat;

    -webkit-mask-position: 50% 0;
    mask-position: 50% 0;

    mask-size: 100px 80px;
    -webkit-mask-size: 100px 80px;

    animation: background-down 45s linear infinite;
  }

  .background-lines > div {
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      var(--color-0) calc(var(--intersection) - var(--gap)),
      transparent var(--intersection),
      var(--color-1) calc(var(--intersection) + var(--gap))
    );

    animation: scan 2s linear infinite;
  }

  @keyframes background-down {
    0% {
      transform: translateY(0);
    }
    to {
      transform: translateY(calc(50% + 28px));
    }
  }

  @keyframes scan {
    0% {
      --intersection: 50%;
    }
    25% {
      --intersection: 48%;
    }
    75% {
      --intersection: 52%;
    }
    100% {
      --intersection: 50%;
    }
  }

  @keyframes light-bloom {
    0% {
      --left-lower-opacity: 0.5;
      --right-lower-opacity: 0.5;
    }
    15% {
      --left-lower-opacity: 0.3;
      --right-lower-opacity: 0.5;
    }
    25% {
      --left-lower-opacity: 0;
      --right-lower-opacity: 0.5;
    }
    50% {
      --left-lower-opacity: 0.5;
      --right-lower-opacity: 0.5;
    }
    75% {
      --left-lower-opacity: 0.5;
      --right-lower-opacity: 0;
    }
    85% {
      --left-lower-opacity: 0.5;
      --right-lower-opacity: 0.2;
    }
    100% {
      --left-lower-opacity: 0.5;
      --right-lower-opacity: 0.5;
    }
  }

  .left-gradient:before,
  .left-gradient:after {
    content: '';
    position: absolute;
    pointer-events: none;
    filter: blur(140px);
    mix-blend-mode: normal;
    will-change: filter;
  }

  /* side */
  .left-gradient:before {
    z-index: 100;
    width: 25%;
    height: 900px;
    left: -12.5%;
    top: calc(50% - 900px / 2 + 151px);
    opacity: 0.2;
    background: linear-gradient(
      180deg,
      hsla(239, 85%, 27%, 0.1),
      hsla(239, 85%, 37%, 0.8)
    );
    transform: rotate(-15deg);
    border-bottom-left-radius: 15% 25%;
    border-bottom-right-radius: 15% 25%;
    border-top-left-radius: 50% 50%;
    border-top-right-radius: 50% 50%;
  }

  /* bottom */
  .left-gradient:after {
    width: 40%;
    height: 420px;
    left: 0px;
    bottom: -210px;
    opacity: var(--left-lower-opacity);
    background: linear-gradient(
      180deg,
      hsla(239, 85%, 27%, 0.1),
      hsla(239, 85%, 37%, 0.8)
    );
    animation: light-bloom 2s linear infinite;
  }

  .right-gradient:after,
  .right-gradient:before {
    content: '';
    position: absolute;
    pointer-events: none;
    filter: blur(140px);
    will-change: filter;
    mix-blend-mode: normal;
  }

  /* side */
  .right-gradient:before {
    z-index: 200;
    width: 25%;
    height: 900px;
    right: -12.5%;
    top: calc(50% - 900px / 2 + 151px);
    background-image: linear-gradient(
      180deg,
      hsla(193, 80%, 33%, 0.1),
      hsla(193, 80%, 43%, 0.4)
    );
    transform: rotate(15deg);
    border-bottom-left-radius: 15% 25%;
    border-bottom-right-radius: 15% 25%;
    border-top-left-radius: 100% 100%;
    border-top-right-radius: 100% 100%;
    opacity: 0.2;
    overflow: hidden;
  }

  /* bottom */
  .right-gradient:after {
    width: 40%;
    height: 420px;
    right: 0;
    transform: matrix(-1, 0, 0, 1, 0, 0);
    bottom: -210px;
    opacity: var(--right-lower-opacity);
    background: linear-gradient(
      180deg,
      hsla(193, 80%, 33%, 0.1),
      hsla(193, 80%, 43%, 0.4)
    );
    animation: light-bloom 2s linear infinite;
  }
</style>
