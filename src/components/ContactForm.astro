---
import button from '../styles/button.module.css';
import FormInput from './FormInput.astro';
---

<section>
  <h1>Contact Me</h1>
  <form id="contact-form">
    <FormInput id="name" label="Name" type="text" name="payload[name]" />
    <FormInput
      id="email"
      label="Email"
      type="email"
      name="payload[email]"
      required={true}
    />
    <div class="form-field">
      <label for="message">Message</label>
      <textarea id="message" name="payload[message]" rows="10" required
      ></textarea>
    </div>
    <span id="form-indicator"></span>
    <button class={`${button.button}`}>
      <span>Submit</span>
      <div id="spinner" class={`${button.spinner}`}>
        <div></div><div></div><div></div>
      </div>
    </button>
  </form>
</section>

<script defer>
  let IS_DIRTY = false;
  const form = document.getElementById('contact-form');
  const submitBtn = form.querySelector('button');
  const spinner = submitBtn.querySelector('#spinner');
  const formStatusIndicator = document.getElementById('form-indicator');

  form.addEventListener('submit', async (e) => {
    e.preventDefault();
    if (IS_DIRTY) return;
    const { email: emailEl, name: nameEl, message: msgEl } = form.elements;
    // TODO: perform data validation and show custom messages;

    try {
      const btnText = submitBtn.querySelector('span');
      btnText.innerText = 'Loading';
      spinner.style.display = 'inline-block';

      await fetch('https://submit-form.com/wKYOt38L', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          Accept: 'application/json',
        },
        body: JSON.stringify({
          Name: nameEl.value,
          Email: emailEl.value,
          Message: msgEl.value,
        }),
      });

      // console.log(res);
      nameEl.value = '';
      emailEl.value = '';
      message.value = '';

      // Set success message and disable button
      btnText.innerText = 'Success';
      spinner.style.display = 'none';
      submitBtn.classList.add('dirty');
      formStatusIndicator.classList.add('success');
      formStatusIndicator.innerText =
        'Your message was received. I will get back to you as soon as possible!';
      submitBtn.disabled = true;
      IS_DIRTY = true;
    } catch (error) {
      console.log(error);
      formStatusIndicator.classList.add('error');
      formStatusIndicator.innerText =
        'There was an error submitting your message. Please try again.';
      btnText.innerText = 'Submit';
      spinner.style.display = 'none';
      IS_DIRTY = false;
    }
  });
</script>

<style>
  * {
    font-family: inherit;
  }
  section {
    width: 100%;
    min-height: calc(100vh - var(--header-height));
    max-width: calc(0.5 * var(--content-max-width));
  }

  #contact-form,
  input,
  textarea {
    font-size: var(--text-default);
    font-family: inherit;
  }

  h1 {
    text-align: center;
    margin-bottom: 1.5rem;
    text-decoration: underline;
    text-underline-offset: 0.5rem;
  }

  form {
    display: grid;
    gap: 1rem;
  }

  textarea {
    resize: vertical;
  }

  button {
    margin: 1.5rem auto 0;
  }

  button.dirty {
    background: transparent;
    border: 2px solid var(--color-text-sub);
    cursor: default;
    color: var(--color-text-sub);
    opacity: 0.5;
  }

  button.dirty:hover {
    background: var(--color-background);
    background-image: var(--color-background);
  }

  button.dirty:hover:before,
  button.dirty:hover:after {
    display: none;
    background-image: none;
    box-shadow: none;
  }

  form > span {
    font-size: var(--text-xs);
    color: var(--color-text-sub);
    margin: 0 auto;
  }

  form > span.success {
    color: var(--color-text-success);
  }

  form > span.error {
    color: var(--color-text-error);
  }
</style>
