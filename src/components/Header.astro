---
import Icon from './Icon.astro';
export interface Props {}

const page = Astro.url.pathname;
const getLinkClasses = (path: string) => {
  if (path === '/') {
    return page === path ? 'active' : '';
  }
  return page.startsWith(path) ? 'active' : '';
};
---

<div class="header-container">
  <header>
    <a href="/"><h2>DA.</h2></a>
    <nav>
      <div class="navlinks">
        <a href="/">Home</a>
        <a href="/portfolio">Portfolio</a>
        <a href="/blog">Blog</a>
        <a href="/contact">Contact</a>
      </div>
      <a id="mobile_nav_button"
        ><Icon icon="menu-icon" color="#5D5FEF" width="2rem" />
      </a>
      <div id="mobile_nav">
        <a href="/" class={getLinkClasses('/')}>Home</a>
        <a href="/portfolio" class={getLinkClasses('/portfolio')}>Portfolio</a>
        <a href="/blog" class={getLinkClasses('/blog')}>Blog</a>
        <a href="/contact" class={getLinkClasses('/contact')}>Contact</a>
      </div>
    </nav>
  </header>
</div>

<script defer>
  // Mobile Menu Button
  const mobileNav = document.getElementById('mobile_nav');
  const mobileNavButton = document.getElementById('mobile_nav_button');

  // Toggle Mobile Nav Menu
  if (mobileNavButton) {
    mobileNavButton.addEventListener('click', (event) => {
      event.preventDefault();
      mobileNav.classList.toggle('open');
      mobileNavButton.classList.toggle('open');
    });
  }
</script>

<style>
  :root {
    --animation-duration: 250ms;
  }

  .header-container {
    width: 100%;
    background: var(--color-surface-0);
    margin-bottom: var(--main-margin-y);
  }

  header {
    display: flex;
    position: relative;
    padding: var(--padding-y) var(--padding-x);
    justify-content: space-between;
    align-items: center;
    font-size: var(--text-md);
    max-width: var(--content-max-width);
    margin: 0 auto;
    user-select: none;
  }

  .navlinks {
    display: none;
  }

  nav a {
    font-weight: 500;
    cursor: pointer;
    text-decoration: none;
    color: inherit;
  }

  nav a:hover {
    color: var(--color-accent);
  }

  h2 {
    font-size: var(--text-xl);
    font-weight: 700;
    color: var(--color-accent);
  }

  #mobile_nav_button {
    position: relative;
    z-index: 2;
    cursor: pointer;
  }

  #mobile_nav_button > * {
    position: relative;
    z-index: 1;
  }

  #mobile_nav {
    grid-template-rows: repeat(4, minmax(auto, 85px));
    position: absolute;
    top: 100%;
    left: -100vw;
    width: 100vw;
    height: calc(100vh - 100%);
    opacity: 0;
    background: var(--color-surface-1);
    transition: opacity calc(var(--animation-duration) * 0.8) ease-out;
  }

  #mobile_nav.open {
    display: grid;
    opacity: 1;
    left: 0;
  }

  #mobile_nav a {
    position: relative;
    display: flex;
    align-items: center;
    padding: 0 calc(1.5 * var(--padding-x));
    transition: none;
    left: -100vw;
  }

  #mobile_nav.open a {
    transition: left var(--animation-duration)
      cubic-bezier(0.17, 0.67, 0.66, 0.97);
    left: 0;
  }

  #mobile_nav a.active {
    background: var(--color-surface-2);
    padding-left: calc(2 * var(--padding-x));
  }

  #mobile_nav a.active::before {
    content: '';
    background: var(--color-accent);
    width: var(--padding-x);
    height: 100%;
    top: 0;
    left: 0;
    position: absolute;
  }

  #mobile_nav a:nth-child(1) {
    transition-delay: 0ms;
  }
  #mobile_nav a:nth-child(2) {
    transition-delay: calc((var(--animation-duration) * 0.25) * 1);
  }
  #mobile_nav a:nth-child(3) {
    transition-delay: calc((var(--animation-duration) * 0.25) * 2);
  }
  #mobile_nav a:nth-child(4) {
    transition-delay: calc((var(--animation-duration) * 0.25) * 3);
  }

  @media only screen and (min-width: 600px) {
    .navlinks {
      display: flex;
      gap: 1em;
      margin-left: 2rem;
      align-items: center;
    }

    #mobile_nav_button,
    #mobile_nav,
    #mobile_nav.open {
      display: none;
    }
  }
</style>
